{% extends 'base.html.twig' %}

{% block title %}Hello HomepageController!{% endblock %}

{% block body %}

<div class="container mx-auto">
    <h1 class="text-2xl font-bold mb-4">Homepage</h1>
    <!-- Aggiungi il campo di input per la ricerca -->
    <input type="text" id="searchInput" placeholder="Cerca per titolo" onkeypress="handleKeyPress(event)">

    <!-- Aggiungi il pulsante per avviare la ricerca -->
    <button class="mr-4 bg-blue-500 text-white px-4 py-2 rounded" onclick="searchImages()">Cerca</button>

    <a href="{{ path('random_images') }}" class="btn btn-primary">Mostra 10 Immagini Random</a>

    <div class="flex mt-4">
        <button id="toggleButton" onclick="toggleViews()" class="mr-4 bg-blue-500 text-white px-4 py-2 rounded">Toggle
            View</button>
        <div class="flex">
            <button id="sortButton" onclick="sortImages('title', 'asc')"
                class="mr-2 bg-green-500 text-white px-4 py-2 rounded">Ordina Titolo A-Z</button>
            <button onclick="sortImages('title', 'desc')" class="mr-2 bg-green-500 text-white px-4 py-2 rounded">Ordina
                Titolo Z-A</button>
            <button onclick="sortImages('date', 'desc')" class="mr-2 bg-green-500 text-white px-4 py-2 rounded">Ordina
                Data Recente</button>
            <button onclick="sortImages('date', 'asc')" class="bg-green-500 text-white px-4 py-2 rounded">Ordina Data
                Vecchia</button>
        </div>
    </div>

    <div id="tableView" {% if viewMode=='table' %}style="display: block;" {% else %}style="display: none;" {% endif %}>
        <h2 class="text-xl font-bold mb-2">Table View</h2>
        <table class="table-auto w-full">
            <thead>
                <tr>
                    <th class="px-4 py-2">Title</th>
                    <th class="px-4 py-2">Image</th>
                    <th class="px-4 py-2">Date</th>
                    <th class="px-4 py-2">Azioni</th>
                </tr>
            </thead>
            <tbody>
                {% for post in posts %}
                <tr id="post-{{ post.id }}">
                    <td class="border px-4 py-2">{{ post.title }}</td>
                    <td class="border px-4 py-2"><img src="{{ post.image }}" alt="Image"></td>
                    <td class="border px-4 py-2">{{ post.date|date('d/m/Y') }}</td>
                    <td class="border px-4 py-2  flex justify-center"><button
                            class=" bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
                            onclick="excludePost('{{ post.id }}')">Nascondi</button>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    <div id="gridView" {% if viewMode=='grid' %}style="display: block;" {% else %}style="display: none;" {% endif %}
        class="hidden">
        <h2 class="text-xl font-bold mb-2">Grid View</h2>
        <div class="grid grid-cols-3 gap-4">
            {% for post in posts %}
            <div class="border p-4">
                <img src="{{ post.image }}" alt="Image" class="mb-2">
                <h5 class="text-lg font-bold mb-2">{{ post.title }}</h5>
                <p class="text-gray-600">{{ post.date|date('d/m/Y') }}</p>
                <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
                    onclick="excludeImage('{{ post.id }}')">Nascondi</button>
            </div>
            {% endfor %}
        </div>
    </div>

    {# Visualizza la paginazione #}
    <div class="pagination justify-center flex">
        {{ knp_pagination_render(posts) }}
    </div>
</div>

<script>
    function toggleViews() {
        var tableView = document.getElementById('tableView');
        var gridView = document.getElementById('gridView');

        if (tableView.style.display === 'none') {
            tableView.style.display = 'block';
            gridView.style.display = 'none';
            // Aggiorna il parametro nell'URL o lato server per salvare lo stato della vista
            history.pushState({}, null, "?view=table");
        } else {
            tableView.style.display = 'none';
            gridView.style.display = 'block';
            // Aggiorna il parametro nell'URL o lato server per salvare lo stato della vista
            history.pushState({}, null, "?view=grid");
        }
    }

    // Funzione per ottenere l'elenco delle immagini escluse dalla memoria locale
    function getExcludedPosts() {
        const excludedPosts = localStorage.getItem('excludedPosts');
        return excludedPosts ? JSON.parse(excludedPosts) : [];
    }

    // Funzione per salvare l'elenco delle immagini escluse nella memoria locale
    function saveExcludedPosts(excludedPosts) {
        localStorage.setItem('excludedPosts', JSON.stringify(excludedPosts));
    }

    // Funzione per gestire il clic del pulsante di esclusione di un'immagine
    function excludePost(postId) {
        console.log('Escludi immagine con ID:', postId);
        const excludedPosts = getExcludedPosts();

        // Aggiungi l'ID dell'immagine all'elenco delle immagini escluse se non è già presente
        if (!excludedPosts.includes(postId)) {
            excludedPosts.push(postId);
            saveExcludedPosts(excludedPosts);
        }

        // Esegui l'aggiornamento visuale o altre azioni necessarie
        updateVisuals();
    }

    // Funzione per controllare e aggiornare la visualizzazione delle immagini escluse
    function updateVisuals() {
        const excludedPosts = getExcludedPosts();
        console.log('Immagini escluse:', excludedPosts);

        // Implementa la logica per escludere visivamente le immagini in base all'elenco delle immagini escluse
        excludedPosts.forEach(postId => {
            const postElement = document.getElementById(`post-${postId}`);
            if (postElement) {
                postElement.style.display = 'none';
            }
        });
    }

    // Esegui l'aggiornamento visuale al caricamento della pagina
    document.addEventListener("DOMContentLoaded", function () {
        updateVisuals();
    });

    function handleKeyPress(event) {
        if (event.key === 'Enter') {
            searchImages();
        }
    }

    function searchImages() {
        // Ottieni il valore dal campo di input
        var searchTerm = document.getElementById('searchInput').value;

        // Costruisci l'URL con il parametro di ricerca
        var currentUrl = window.location.href;
        var separator = currentUrl.includes('?') ? '&' : '?';
        var newUrl = currentUrl + separator + 'search=' + searchTerm;

        // Aggiorna l'URL per includere il parametro di ricerca
        window.location.href = newUrl;
    }

</script>


{% endblock %}